// <auto-generated />
using System;
using Kassa;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kassa.Migrations
{
    [DbContext(typeof(KassaContext))]
    partial class KassaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kassa.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DishGroupId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DishGroupId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DishGroupId = 1,
                            IsDeleted = false,
                            Name = "Борщ украинский",
                            Price = 150m
                        },
                        new
                        {
                            Id = 2,
                            DishGroupId = 1,
                            IsDeleted = false,
                            Name = "Солянка мясная",
                            Price = 200m
                        },
                        new
                        {
                            Id = 3,
                            DishGroupId = 1,
                            IsDeleted = false,
                            Name = "Крем-суп грибной",
                            Price = 180m
                        },
                        new
                        {
                            Id = 4,
                            DishGroupId = 1,
                            IsDeleted = false,
                            Name = "Суп-лапша куриная",
                            Price = 120m
                        },
                        new
                        {
                            Id = 5,
                            DishGroupId = 2,
                            IsDeleted = false,
                            Name = "Цезарь с курицей",
                            Price = 250m
                        },
                        new
                        {
                            Id = 6,
                            DishGroupId = 2,
                            IsDeleted = false,
                            Name = "Оливье классический",
                            Price = 180m
                        },
                        new
                        {
                            Id = 7,
                            DishGroupId = 2,
                            IsDeleted = false,
                            Name = "Греческий салат",
                            Price = 220m
                        },
                        new
                        {
                            Id = 8,
                            DishGroupId = 2,
                            IsDeleted = false,
                            Name = "Салат из свежих овощей",
                            Price = 160m
                        },
                        new
                        {
                            Id = 9,
                            DishGroupId = 2,
                            IsDeleted = false,
                            Name = "Салат с креветками",
                            Price = 380m
                        },
                        new
                        {
                            Id = 10,
                            DishGroupId = 3,
                            IsDeleted = false,
                            Name = "Чай черный",
                            Price = 50m
                        },
                        new
                        {
                            Id = 11,
                            DishGroupId = 3,
                            IsDeleted = false,
                            Name = "Кофе американо",
                            Price = 100m
                        },
                        new
                        {
                            Id = 12,
                            DishGroupId = 3,
                            IsDeleted = false,
                            Name = "Капучино",
                            Price = 130m
                        },
                        new
                        {
                            Id = 13,
                            DishGroupId = 3,
                            IsDeleted = false,
                            Name = "Латте",
                            Price = 140m
                        },
                        new
                        {
                            Id = 14,
                            DishGroupId = 3,
                            IsDeleted = false,
                            Name = "Сок апельсиновый",
                            Price = 80m
                        },
                        new
                        {
                            Id = 15,
                            DishGroupId = 3,
                            IsDeleted = false,
                            Name = "Морс клюквенный",
                            Price = 70m
                        },
                        new
                        {
                            Id = 16,
                            DishGroupId = 4,
                            IsDeleted = false,
                            Name = "Котлета по-киевски",
                            Price = 320m
                        },
                        new
                        {
                            Id = 17,
                            DishGroupId = 4,
                            IsDeleted = false,
                            Name = "Бефстроганов",
                            Price = 390m
                        },
                        new
                        {
                            Id = 18,
                            DishGroupId = 4,
                            IsDeleted = false,
                            Name = "Курица в сливочном соусе",
                            Price = 280m
                        },
                        new
                        {
                            Id = 19,
                            DishGroupId = 4,
                            IsDeleted = false,
                            Name = "Рыба запеченная",
                            Price = 350m
                        },
                        new
                        {
                            Id = 20,
                            DishGroupId = 4,
                            IsDeleted = false,
                            Name = "Свинина на гриле",
                            Price = 420m
                        },
                        new
                        {
                            Id = 21,
                            DishGroupId = 5,
                            IsDeleted = false,
                            Name = "Брускетта с томатами",
                            Price = 150m
                        },
                        new
                        {
                            Id = 22,
                            DishGroupId = 5,
                            IsDeleted = false,
                            Name = "Сырная тарелка",
                            Price = 450m
                        },
                        new
                        {
                            Id = 23,
                            DishGroupId = 5,
                            IsDeleted = false,
                            Name = "Мясная тарелка",
                            Price = 520m
                        },
                        new
                        {
                            Id = 24,
                            DishGroupId = 5,
                            IsDeleted = false,
                            Name = "Маринованные овощи",
                            Price = 120m
                        },
                        new
                        {
                            Id = 25,
                            DishGroupId = 6,
                            IsDeleted = false,
                            Name = "Тирамису",
                            Price = 180m
                        },
                        new
                        {
                            Id = 26,
                            DishGroupId = 6,
                            IsDeleted = false,
                            Name = "Чизкейк Нью-Йорк",
                            Price = 160m
                        },
                        new
                        {
                            Id = 27,
                            DishGroupId = 6,
                            IsDeleted = false,
                            Name = "Мороженое",
                            Price = 90m
                        },
                        new
                        {
                            Id = 28,
                            DishGroupId = 6,
                            IsDeleted = false,
                            Name = "Фруктовый салат",
                            Price = 140m
                        },
                        new
                        {
                            Id = 29,
                            DishGroupId = 7,
                            IsDeleted = false,
                            Name = "Пицца Маргарита",
                            Price = 350m
                        },
                        new
                        {
                            Id = 30,
                            DishGroupId = 7,
                            IsDeleted = false,
                            Name = "Пицца Пепперони",
                            Price = 420m
                        },
                        new
                        {
                            Id = 31,
                            DishGroupId = 7,
                            IsDeleted = false,
                            Name = "Пицца 4 сыра",
                            Price = 450m
                        },
                        new
                        {
                            Id = 32,
                            DishGroupId = 7,
                            IsDeleted = false,
                            Name = "Пицца с грибами",
                            Price = 380m
                        },
                        new
                        {
                            Id = 33,
                            DishGroupId = 8,
                            IsDeleted = false,
                            Name = "Спагетти Болоньезе",
                            Price = 280m
                        },
                        new
                        {
                            Id = 34,
                            DishGroupId = 8,
                            IsDeleted = false,
                            Name = "Паста Карбонара",
                            Price = 320m
                        },
                        new
                        {
                            Id = 35,
                            DishGroupId = 8,
                            IsDeleted = false,
                            Name = "Феттучини Альфредо",
                            Price = 300m
                        },
                        new
                        {
                            Id = 36,
                            DishGroupId = 9,
                            IsDeleted = false,
                            Name = "Стейк рибай",
                            Price = 890m
                        },
                        new
                        {
                            Id = 37,
                            DishGroupId = 9,
                            IsDeleted = false,
                            Name = "Стейк филе миньон",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 38,
                            DishGroupId = 9,
                            IsDeleted = false,
                            Name = "Куриные крылышки",
                            Price = 220m
                        },
                        new
                        {
                            Id = 39,
                            DishGroupId = 9,
                            IsDeleted = false,
                            Name = "Семга на гриле",
                            Price = 480m
                        },
                        new
                        {
                            Id = 40,
                            DishGroupId = 10,
                            IsDeleted = false,
                            Name = "Пиво светлое",
                            Price = 120m
                        },
                        new
                        {
                            Id = 41,
                            DishGroupId = 10,
                            IsDeleted = false,
                            Name = "Вино красное сухое",
                            Price = 200m
                        },
                        new
                        {
                            Id = 42,
                            DishGroupId = 10,
                            IsDeleted = false,
                            Name = "Водка",
                            Price = 150m
                        },
                        new
                        {
                            Id = 43,
                            DishGroupId = 10,
                            IsDeleted = false,
                            Name = "Коньяк",
                            Price = 300m
                        });
                });

            modelBuilder.Entity("Kassa.DishGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DishGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Супы"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Салаты"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Напитки"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Горячие блюда"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Закуски"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Десерты"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Пицца"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Паста"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Гриль"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Алкогольные напитки"
                        });
                });

            modelBuilder.Entity("Kassa.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TableCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Веранда",
                            TableCount = 6
                        },
                        new
                        {
                            Id = 2,
                            Name = "Основной зал",
                            TableCount = 12
                        },
                        new
                        {
                            Id = 3,
                            Name = "Второй этаж",
                            TableCount = 8
                        });
                });

            modelBuilder.Entity("Kassa.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Наличные"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Карта"
                        });
                });

            modelBuilder.Entity("Kassa.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CashierId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("OpenedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Kassa.Models.TableReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeOnly>("FromTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("HallId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TableNumber")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("ToTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.ToTable("TableReservations");
                });

            modelBuilder.Entity("Kassa.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AutoLogoutMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(10);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FullName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutoLogoutMinutes = 10,
                            FullName = "АдминАА",
                            PasswordHash = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Kassa.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CashGiven")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Change")
                        .HasColumnType("numeric");

                    b.Property<int>("HallId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PaymentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int>("TableNumber")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallId = 1,
                            OrderDate = new DateTime(2025, 5, 25, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethodId = 1,
                            PaymentTime = new DateTime(2025, 5, 25, 13, 15, 0, 0, DateTimeKind.Unspecified),
                            StatusId = 2,
                            TableNumber = 5,
                            TotalAmount = 730m
                        },
                        new
                        {
                            Id = 2,
                            HallId = 2,
                            OrderDate = new DateTime(2025, 5, 25, 14, 20, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethodId = 2,
                            PaymentTime = new DateTime(2025, 5, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            StatusId = 2,
                            TableNumber = 8,
                            TotalAmount = 1250m
                        },
                        new
                        {
                            Id = 3,
                            HallId = 1,
                            OrderDate = new DateTime(2025, 5, 26, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethodId = 1,
                            PaymentTime = new DateTime(2025, 5, 26, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            StatusId = 2,
                            TableNumber = 3,
                            TotalAmount = 890m
                        },
                        new
                        {
                            Id = 4,
                            HallId = 2,
                            OrderDate = new DateTime(2025, 5, 27, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            StatusId = 1,
                            TableNumber = 12,
                            TotalAmount = 650m
                        });
                });

            modelBuilder.Entity("Kassa.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DishGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("DishId")
                        .HasColumnType("integer");

                    b.Property<int>("GuestNumber")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DishGroupId");

                    b.HasIndex("DishId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DishGroupId = 1,
                            DishId = 1,
                            GuestNumber = 1,
                            OrderId = 1,
                            Price = 150m
                        },
                        new
                        {
                            Id = 2,
                            DishGroupId = 2,
                            DishId = 5,
                            GuestNumber = 1,
                            OrderId = 1,
                            Price = 250m
                        },
                        new
                        {
                            Id = 3,
                            DishGroupId = 4,
                            DishId = 16,
                            GuestNumber = 1,
                            OrderId = 1,
                            Price = 320m
                        },
                        new
                        {
                            Id = 4,
                            DishGroupId = 3,
                            DishId = 11,
                            GuestNumber = 1,
                            OrderId = 1,
                            Price = 100m
                        },
                        new
                        {
                            Id = 5,
                            DishGroupId = 9,
                            DishId = 36,
                            GuestNumber = 1,
                            OrderId = 2,
                            Price = 890m
                        },
                        new
                        {
                            Id = 6,
                            DishGroupId = 2,
                            DishId = 7,
                            GuestNumber = 1,
                            OrderId = 2,
                            Price = 220m
                        },
                        new
                        {
                            Id = 7,
                            DishGroupId = 3,
                            DishId = 13,
                            GuestNumber = 1,
                            OrderId = 2,
                            Price = 140m
                        },
                        new
                        {
                            Id = 8,
                            DishGroupId = 7,
                            DishId = 29,
                            GuestNumber = 1,
                            OrderId = 3,
                            Price = 350m
                        },
                        new
                        {
                            Id = 9,
                            DishGroupId = 8,
                            DishId = 33,
                            GuestNumber = 1,
                            OrderId = 3,
                            Price = 280m
                        },
                        new
                        {
                            Id = 10,
                            DishGroupId = 6,
                            DishId = 25,
                            GuestNumber = 1,
                            OrderId = 3,
                            Price = 180m
                        },
                        new
                        {
                            Id = 11,
                            DishGroupId = 3,
                            DishId = 14,
                            GuestNumber = 1,
                            OrderId = 3,
                            Price = 80m
                        },
                        new
                        {
                            Id = 12,
                            DishGroupId = 1,
                            DishId = 2,
                            GuestNumber = 1,
                            OrderId = 4,
                            Price = 200m
                        },
                        new
                        {
                            Id = 13,
                            DishGroupId = 7,
                            DishId = 30,
                            GuestNumber = 1,
                            OrderId = 4,
                            Price = 420m
                        },
                        new
                        {
                            Id = 14,
                            DishGroupId = 3,
                            DishId = 10,
                            GuestNumber = 1,
                            OrderId = 4,
                            Price = 50m
                        });
                });

            modelBuilder.Entity("Kassa.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Создан"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Оплачен"
                        });
                });

            modelBuilder.Entity("Kassa.Dish", b =>
                {
                    b.HasOne("Kassa.DishGroup", "DishGroup")
                        .WithMany("Dishes")
                        .HasForeignKey("DishGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DishGroup");
                });

            modelBuilder.Entity("Kassa.Models.Shift", b =>
                {
                    b.HasOne("Kassa.Models.User", "Cashier")
                        .WithMany()
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("Kassa.Order", b =>
                {
                    b.HasOne("Kassa.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kassa.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("Kassa.OrderStatus", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kassa.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Hall");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kassa.OrderItem", b =>
                {
                    b.HasOne("Kassa.DishGroup", "DishGroup")
                        .WithMany()
                        .HasForeignKey("DishGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kassa.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kassa.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("DishGroup");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Kassa.DishGroup", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("Kassa.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Kassa.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
